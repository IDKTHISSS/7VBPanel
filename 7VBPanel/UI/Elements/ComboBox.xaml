<UserControl x:Class="_7VBPanel.UI.Elements.ComboBox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:_7VBPanel.UI.Elements"
             xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
             mc:Ignorable="d" d:DesignWidth="800" Height="83">
    <UserControl.Resources>
        <LinearGradientBrush x:Key="ComboBox.Static.Background" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0.0" Color="#202020" />
            <GradientStop Offset="1.0" Color="#202020" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#fff" />
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#202020" />
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#202020" />
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0.0" Color="#202020" />
            <GradientStop Offset="1.0" Color="#202020" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#D3D3D3" />
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#161616" />
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#161616" />
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0.0" Color="#161616" />
            <GradientStop Offset="1.0" Color="#161616" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#161616" />
        <LinearGradientBrush x:Key="ComboBox.Pressed.Background" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0.0" Color="#161616" />
            <GradientStop Offset="1.0" Color="#161616" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#fff" />
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#161616" />
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#161616" />
        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0.0" Color="#161616" />
            <GradientStop Offset="1.0" Color="#161616" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#161616" />
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#161616" />
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#161616" />
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#161616" />
        <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
            <Setter Property="UIElement.AllowDrop" Value="True" />
            <Setter Property="MinWidth" Value="0" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="MinHeight" Value="0" />
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ScrollViewer Name="PART_ContentHost" Background="#00FFFFFF" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="ButtonBase.ClickMode" Value="Press" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Name="templateRoot" BorderThickness="1" CornerRadius="4" SnapsToDevicePixels="True" Background="{StaticResource ComboBox.Static.Background}" BorderBrush="{StaticResource ComboBox.Static.Border}">
                            <Border Name="splitBorder" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Margin="0" HorizontalAlignment="Right" BorderBrush="#00FFFFFF" BorderThickness="1" SnapsToDevicePixels="True">
                                <Path Name="arrow" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" Data="F1 M0,0 L2.667,2.66665 L5.3334,0 L5.3334,-1.78168 L2.6667,0.88501 L0,-1.78168 L0,0" Fill="#fff" />
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Value="true" Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" />
                                    <Condition Value="false" Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" />
                                    <Condition Value="false" Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" />
                                    <Condition Value="true" Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Property="Border.Background" Value="{StaticResource ComboBox.Static.Editable.Background}" />

                                <Setter TargetName="splitBorder" Property="Border.Background" Value="#161616" />
                            </MultiDataTrigger>
                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                <Setter TargetName="arrow" Property="Shape.Fill" Value="#fff" />
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Value="true" Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" />
                                    <Condition Value="false" Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Property="Border.Background" Value="{StaticResource ComboBox.MouseOver.Background}" />
                                <Setter TargetName="templateRoot" Property="Border.BorderBrush" Value="{StaticResource ComboBox.MouseOver.Border}" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Value="true" Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" />
                                    <Condition Value="true" Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Property="Border.Background" Value="{StaticResource ComboBox.MouseOver.Editable.Background}" />
                                <Setter TargetName="templateRoot" Property="Border.BorderBrush" Value="{StaticResource ComboBox.MouseOver.Editable.Border}" />
                                <Setter TargetName="splitBorder" Property="Border.Background" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}" />
                                <Setter TargetName="splitBorder" Property="Border.BorderBrush" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}" />
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="arrow" Property="Shape.Fill" Value="#fff" />
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Value="true" Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" />
                                    <Condition Value="false" Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Property="Border.Background" Value="{StaticResource ComboBox.Pressed.Background}" />
                                <Setter TargetName="templateRoot" Property="Border.BorderBrush" Value="{StaticResource ComboBox.Pressed.Border}" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Value="true" Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" />
                                    <Condition Value="true" Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Property="Border.Background" Value="{StaticResource ComboBox.Pressed.Editable.Background}" />
                                <Setter TargetName="templateRoot" Property="Border.BorderBrush" Value="{StaticResource ComboBox.Pressed.Editable.Border}" />
                                <Setter TargetName="splitBorder" Property="Border.Background" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}" />
                                <Setter TargetName="splitBorder" Property="Border.BorderBrush" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}" />
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="arrow" Property="Shape.Fill" Value="#fff" />
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Value="false" Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" />
                                    <Condition Value="false" Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Property="Border.Background" Value="#161616" />
                                <Setter TargetName="templateRoot" Property="Border.BorderBrush" Value="{StaticResource ComboBox.Disabled.Border}" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Value="false" Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" />
                                    <Condition Value="true" Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Property="Border.Background" Value="{StaticResource ComboBox.Disabled.Editable.Background}" />
                                <Setter TargetName="templateRoot" Property="Border.BorderBrush" Value="{StaticResource ComboBox.Disabled.Editable.Border}" />
                                <Setter TargetName="splitBorder" Property="Border.Background" Value="#161616" />
                                <Setter TargetName="splitBorder" Property="Border.BorderBrush" Value="#161616" />
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid Name="templateRoot" SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
                </Grid.ColumnDefinitions>
                <Popup Name="PART_Popup" Grid.ColumnSpan="2" Margin="1" AllowsTransparency="True" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                    <Themes:SystemDropShadowChrome Themes:SystemDropShadowChrome.Color="Transparent" FrameworkElement.Name="shadow" FrameworkElement.MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}" FrameworkElement.MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border Name="dropDownBorder" Margin="0,5,0,0" Padding="4,3,4,2" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderBrush="#161616" BorderThickness="1" CornerRadius="4">
                            <ScrollViewer Name="DropDownScrollViewer">
                                <Grid Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas Name="canvas" Width="0" Height="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                        <Rectangle Name="opaqueRect" Width="{Binding ActualWidth, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Fill="{Binding Background, ElementName=dropDownBorder}" />
                                    </Canvas>
                                    <ItemsPresenter Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton Name="toggleButton" Grid.ColumnSpan="2" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="1" Style="{StaticResource ComboBoxToggleButton}" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                <ContentPresenter Name="contentPresenter" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Content="{TemplateBinding ComboBox.SelectionBoxItem}" ContentStringFormat="{TemplateBinding ComboBox.SelectionBoxItemStringFormat}" ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}" IsHitTestVisible="False" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
                    <Setter TargetName="shadow" Property="FrameworkElement.Margin" Value="0,0,5,5" />
                    <Setter TargetName="shadow" Property="Themes:SystemDropShadowChrome.Color" Value="#161616" />
                </Trigger>
                <Trigger Property="ItemsControl.HasItems" Value="False">
                    <Setter TargetName="dropDownBorder" Property="FrameworkElement.Height" Value="95" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="ItemsControl.IsGrouping" Value="True" />
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                </MultiTrigger>
                <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
                    <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                    <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate />
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
            <Grid Name="templateRoot" SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
                </Grid.ColumnDefinitions>
                <Popup Name="PART_Popup" Grid.ColumnSpan="2" AllowsTransparency="True" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
                    <Themes:SystemDropShadowChrome Themes:SystemDropShadowChrome.Color="Transparent" FrameworkElement.Name="shadow" FrameworkElement.MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}" FrameworkElement.MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border Name="dropDownBorder" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" CornerRadius="4">
                            <ScrollViewer Name="DropDownScrollViewer">
                                <Grid Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas Name="canvas" Width="0" Height="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                        <Rectangle Name="opaqueRect" Width="{Binding ActualWidth, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Fill="{Binding Background, ElementName=dropDownBorder}" />
                                    </Canvas>
                                    <ItemsPresenter Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton Name="toggleButton" Grid.ColumnSpan="2" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="1" Style="{StaticResource ComboBoxToggleButton}" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                <Border Name="border" Margin="{TemplateBinding Control.BorderThickness}" Background="#161616">
                    <TextBox Name="PART_EditableTextBox" Margin="{TemplateBinding Control.Padding}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Style="{StaticResource ComboBoxEditableTextBox}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" />
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                    <Setter TargetName="border" Property="UIElement.Opacity" Value="0.56" />
                </Trigger>
                <Trigger Property="UIElement.IsKeyboardFocusWithin" Value="False">
                    <Setter Property="Control.Foreground" Value="#FF000000" />
                </Trigger>
                <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
                    <Setter TargetName="shadow" Property="FrameworkElement.Margin" Value="0,0,5,5" />
                    <Setter TargetName="shadow" Property="Themes:SystemDropShadowChrome.Color" Value="#161616" />
                </Trigger>
                <Trigger Property="ItemsControl.HasItems" Value="False">
                    <Setter TargetName="dropDownBorder" Property="FrameworkElement.Height" Value="95" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="ItemsControl.IsGrouping" Value="True" />
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                </MultiTrigger>
                <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
                    <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                    <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ComboBoxStyle1" TargetType="{x:Type ComboBox}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="Padding" Value="6,3,5,3" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
            <Setter Property="ScrollViewer.PanningMode" Value="Both" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}" />
            <Style.Triggers>
                <Trigger Property="ComboBox.IsEditable" Value="True">
                    <Setter Property="IsTabStop" Value="False" />
                    <Setter Property="Padding" Value="2" />
                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <Grid>
        <ComboBox Name="ComboBox_DefaultTab"
                  Margin="0"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch"
                  VerticalContentAlignment="Center"
                  Panel.ZIndex="202"
                  Background="#161616"
                  BorderThickness="1"
                  FontFamily="Yu Gothic UI"
                  Foreground="#fff"
                  Style="{DynamicResource ComboBoxStyle1}"
                  BorderBrush="{x:Null}" SelectionChanged="ComboBox_DefaultTab_SelectionChanged_1"
                  >
            <FrameworkElement.Resources>
                <ResourceDictionary>
                    <SolidColorBrush x:Key="{x:Static SystemColors.WindowBrushKey}" Color="#161616" />
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                </ResourceDictionary>
            </FrameworkElement.Resources>
        </ComboBox>
    </Grid>
</UserControl>
